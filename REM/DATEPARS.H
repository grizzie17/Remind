/*---------------------------------------------------------------------+\|																		||				copyright Griswold Software 1986 ... 1993				||																		||	This software-file/document, in whole or in part, including the		||	structures and the procedures described herein, may not be			||	provided or otherwise made available without prior written			||	authorization.  In case of authorized or unauthorized publication	||	or duplication, copyright is claimed.								||																		||	Griswold Software assumes NO responsibility for the use or			||	reliability of software altered by the user.						||																		||	The information in this document is subject to change without		||	notice and should not be construed as a commitment by				||	Griswold Software.													||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	prototyp.fdf  --  brief description of what datepars.fdf is for||	Purpose:|	Author and Date:	first lastName			dd-mmm-yyyy|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	dd-mmm-yyyy			f.lastName		description|\+---------------------------------------------------------------------*/#ifndef _H_datepars#define _H_datepars/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "inclnest.h"#include "mparse.h"#include "inclunst.h"/*=====================================================================+\||																		|||	 Prototypes															|||																		|\+=====================================================================*//*---------------------------------------------------------------------+\ *  NAME:	 parse_weekday - brief statement *  DESCRIPTION:		parse the character string weekday name			    sunday		    monday		    tuesday		    wednesday		    thursday		    friday		    saturday		The actual syntax is:   [ {even|odd} : ] weekdayname *  AUTHOR: J.Griswold		DATE:	03-Nov-1993\+---------------------------------------------------------------------*/int		parse_weekday		(		int			*pWeekNum,		int			*pWeekDay,		char		*string		);/*---------------------------------------------------------------------+\ *  NAME:	 parse_moonPhase - brief statement *  DESCRIPTION:		This routine parses a date of the format				    full moon		    new moon *  AUTHOR: J.Griswold		DATE:	03-Nov-1993\+---------------------------------------------------------------------*/int		parse_moonPhase		(		int		*pMoonPhase,		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 parse_ddmmmyyyy - brief statement *  DESCRIPTION:		This routine parses a date with the format			    dd-mmm[-yyyy]			    where:				dd		is the numeric day of the month						(negative day indicates the day from						the end of the month)						mmm		is the character name, numeric, or						wild card value of the month.						yyyy	is the numeric or wild card (*) value						of the year.  (if the century is absent						it is added). *  AUTHOR: J.Griswold		DATE:	03-Nov-1993\+---------------------------------------------------------------------*/int		parse_ddmmmyyyy		(		int		*pDay,		//	OUT:		int		*pMonth,	//	OUT:		int		*pCycle,	//	OUT:		int		*pYear,		//	OUT:		int		*pAnniv,	//	OUT:		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 parse_mmmddyyyy *  DESCRIPTION:		This routine parses a date of the form:			    mmm dd [, yyyy]			    where:					mmm		is the name of the month				dd		is the numeric date				yyyy	is the optional numeric year. *  AUTHOR: J.Griswold		DATE:	03-Nov-1993\+---------------------------------------------------------------------*/int		parse_mmmddyyyy		(		int		*pDay,		//	OUT:		int		*pMonth,	//	OUT:		int		*pCycle,	//	OUT:		int		*pYear,		//	OUT:		int		*pAnniv,	//	OUT:		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 parse_mdy *  DESCRIPTION:		This routine parses a date of the form:			    mm/dd/yy			    where:					mm	is the numeric or named month				dd	is the numeric date				yy	is the numeric year *  AUTHOR: J.Griswold		DATE:	03-Nov-1993\+---------------------------------------------------------------------*/int		parse_mdy		(		int		*pDay,		//	OUT:		int		*pMonth,	//	OUT:		int		*pCycle,	//	OUT:		int		*pYear,		//	OUT:		int		*pAnniv,	//	OUT:		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 parse_nnwwwmmmyyyy *  DESCRIPTION:	    This routine converts an ascii string calendar date of	    the form:			nn:www-mmm-yyyy			where:				nn		is the numeric week-number of the month			www		is the character weekday name			mmm		is the numeric, character, or wild card value					of the month.			yyyy	is the numeric or wild card value of the year.	 *  AUTHOR: J.Griswold		DATE:	03-Nov-1993\+---------------------------------------------------------------------*/int		parse_nnwwwmmmyyyy		(		int		*pWeekNum,	//	OUT:		int		*pWeekDay,	//	OUT:		int		*pMonth,	//	OUT:		int		*pCycle,	//	OUT:		int		*pYear,		//	OUT:		int		*pAnniv,	//	OUT:		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 parse_kwdday -  *  DESCRIPTION:		parses a string of characters into a date record. *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/int		parse_kwdday		(		int		*pIdent,	//	OUT:		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 dateParse_dateString -  *  DESCRIPTION:		parses a string of characters into a date record. *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/int		dateParse_dateString		(						/* RTN:	number of characters in date */		MParsePtr	pDate,		/* OUT:	date */		char		*string		/* IN:	string to parse */		);#endif /* _H_datepars */