/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	nodeweek.cpp  --  brief description of what nodeday.cpp is for||	Purpose:|	Author and Date:	J.Griswold			16-May-1995|| optional topics (delete if not used)|	Usage:|	Restrictions/Warnings:|	Algorithms/Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	16-May-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*///#include "stdafx.h"		// must be first include for MFC#include "beardefs.h"#include "xpdraw.h"#include "julian.h"#include "nodeweek.h"/*---------------------------------------------------------------------+\|																		||	Local defines / constants											||																		|\+---------------------------------------------------------------------*/#define INHERITED	NodeJDayOwner/*---------------------------------------------------------------------+\|																		||	Local Type Definitions												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Private Global Variables											||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Public Global Variables												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	 Code																|||																		|\+=====================================================================*/#if 0#pragma mark ____class____#endif/*---------------------------------------------------------------------+\ *  NAME:	 NodeWeek - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	16-May-1995\+---------------------------------------------------------------------*/NodeWeek::NodeWeek		(		void		)		: INHERITED(){	initNodeWeek();}/*---------------------------------------------------------------------+\ *  NAME:	 NodeWeek - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	16-May-1995\+---------------------------------------------------------------------*/NodeWeek::NodeWeek		(		Long	nDate		)		: INHERITED( nDate ){	initNodeWeek();}/*---------------------------------------------------------------------+\ *  NAME:	 initNodeWeek - initialization *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	16-May-1995\+---------------------------------------------------------------------*/void	NodeWeek::initNodeWeek		(		void		){}/*---------------------------------------------------------------------+\ *  NAME:	 ~NodeWeek - destructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	16-May-1995\+---------------------------------------------------------------------*/NodeWeek::~NodeWeek		(		void		){}/*=====================================================================+\||	 public member functions											|\+=====================================================================*/#if 0#pragma mark ____public____#endif/*---------------------------------------------------------------------+\ *  NAME:	 buildWeekList - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	16-May-1995\+---------------------------------------------------------------------*/NodeWeekPtr		NodeWeek::buildWeekList		(		NodeJDayPtr	pList		){	NodeWeekPtr	pHead = NULL;	NodeWeekPtr	pWeek;	NodeJDayPtr	pNext;	Long		nWeekStart;	Long		nJulian;	int			nWeekDay;		//	calculate date of sunday	nJulian = pList->getJulianDay();	nWeekDay = julianDate_weekdayFromNumber( nJulian );	nWeekStart = nJulian - nWeekDay + 1;		pHead = pWeek = new NodeWeek( nWeekStart );	if ( pHead )	{		pHead->addJDayList( pList );		nWeekStart += 7;		while ( pList )		{			pNext = (NodeJDayPtr)pList->getNext();			if ( pNext )			{				nJulian = pNext->getJulianDay();				if ( nWeekStart <= nJulian )				{					nWeekDay = julianDate_weekdayFromNumber( nJulian );					nWeekStart = nJulian - nWeekDay + 1;					pWeek = new NodeWeek( nWeekStart );					if ( pWeek )					{						pWeek->addJDayList( pNext );						pHead->appendLink( pWeek );						pList->setNext( NULL );					}					nWeekStart += 7;				}			}			pList = pNext;		}	}		return pHead;}/*=====================================================================+\||	 protected member functions											|\+=====================================================================*/#if 0#pragma mark ____protected____#endif/*=====================================================================+\||	 private member functions											|\+=====================================================================*/#if 0#pragma mark ____private____#endif/*=====================================================================+\||																		|||	 Overrides															|||																		|\+=====================================================================*/#if 0#pragma mark ________Overrides________#endif/*---------------------------------------------------------------------+\ *  NAME:	someFunction - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/