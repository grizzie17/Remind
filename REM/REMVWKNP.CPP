/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1995 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	remvwknp.cpp  --  brief description of what remvwknp.cpp is for||	Purpose:|	Author and Date:	J.Griswold			dd-mmm-1995|| optional topics (delete if not used)|	Usage:|	Restrictions/Warnings:|	Algorithms/Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|	$Header:	$|	--=>keyflag<=-- "Version %v %f, Locked by %l"|	""\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	dd-mmm-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "stdafx.h"		// must be first include for MFC#include "remvweek.h"#include "remcmds.h"#if defined( FRAMEWORK_MFC )#	include "resource.h"#elif defined( FRAMEWORK_PowerPlant )#	include <LControl.h>#	include <LCaption.h>#	include <LMenuBar.h>#	include "bearstr.h"#endif/*---------------------------------------------------------------------+\|																		||	Local defines / constants											||																		|\+---------------------------------------------------------------------*/#define INHERITED	RemindViewBase#if defined( FRAMEWORK_MFC )#elif defined( FRAMEWORK_PowerPlant )	const Char16	CHAR_CheckMark	= 18;	const ResIDT	MENU_Weeks		= 133;	const ResIDT	MENU_Navigate	= 131;	const PaneIDT	PANE_Week		= 'Week';#endif // FRAMEWORK/*---------------------------------------------------------------------+\|																		||	Local Type Definitions												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Private Global Variables											||																		|\+---------------------------------------------------------------------*/#if defined( FRAMEWORK_PowerPlant )LMenu	*RemindViewWeekly::vpMenu = NULL;long	RemindViewWeekly::vnRefCount = 0;#endif/*---------------------------------------------------------------------+\|																		||	Public Global Variables												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	 Code																|||																		|\+=====================================================================*//*=====================================================================+\||	 MFC Frame-Work														|\+=====================================================================*/#if 0____FRAMEWORK_MFC____(){}#endif#if defined( FRAMEWORK_MFC )void RemindViewWeekly::OnWeeksOneWeek		(		void		){	cmdOneWeek();}void RemindViewWeekly::OnWeeksTwoWeeks		(		void		){	cmdTwoWeeks();}void RemindViewWeekly::OnWeeksThreeWeeks		(		void		){	cmdThreeWeeks();}void RemindViewWeekly::OnWeeksFourWeeks		(		void		){	cmdFourWeeks();}void RemindViewWeekly::OnWeeksFiveWeeks		(		void		){	cmdFiveWeeks();}void RemindViewWeekly::OnWeeksSixWeeks		(		void		){	cmdSixWeeks();}/*=====================================================================+\||	 Power Plant Frame-Work												|\+=====================================================================*/#if 0____FRAMEWORK_PowerPlant____(){}#endif#elif defined( FRAMEWORK_PowerPlant )/*---------------------------------------------------------------------+\ *  NAME:	 ActivateSelf - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	25-Jun-1995\+---------------------------------------------------------------------*/void	RemindViewWeekly::ActivateSelf		(		void		){	if ( vpMenu )	{		LMenuBar::GetCurrentMenuBar()->InstallMenu( vpMenu, MENU_Navigate );	}	INHERITED::ActivateSelf();}/*---------------------------------------------------------------------+\ *  NAME:	 DeactivateSelf - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	25-Jun-1995\+---------------------------------------------------------------------*/void	RemindViewWeekly::DeactivateSelf		(		void		){	INHERITED::DeactivateSelf();	if ( vpMenu )	{		LMenuBar::GetCurrentMenuBar()->RemoveMenu( vpMenu );	}}/*---------------------------------------------------------------------+\ *  NAME:	 FinishCreateSelf - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	11-Jun-1995\+---------------------------------------------------------------------*/void	RemindViewWeekly::FinishCreateSelf		(		void		){	INHERITED::FinishCreateSelf();	if ( 0 == vnRefCount )		vpMenu = new LMenu( MENU_Weeks );	++vnRefCount;}/*---------------------------------------------------------------------+\ *  NAME:	 ObeyCommand - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	24-Mar-1995\+---------------------------------------------------------------------*/Boolean	RemindViewWeekly::ObeyCommand		(		CommandT	inCommand,		void		*ioParam		){	Boolean		cmdHandled = true;	switch ( inCommand )	{	case CMD_OneWeek:		cmdOneWeek();		break;	case CMD_TwoWeeks:		cmdTwoWeeks();		break;	case CMD_ThreeWeeks:		cmdThreeWeeks();		break;	case CMD_FourWeeks:		cmdFourWeeks();		break;	case CMD_FiveWeeks:		cmdFiveWeeks();		break;	case CMD_SixWeeks:		cmdSixWeeks();		break;		default:		cmdHandled = INHERITED::ObeyCommand( inCommand, ioParam );		break;	}		return cmdHandled;}/*---------------------------------------------------------------------+\ *  NAME:	 FindCommandStatus - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	24-Mar-1995\+---------------------------------------------------------------------*/void	RemindViewWeekly::FindCommandStatus		(		CommandT	inCommand,		Boolean		&outEnabled,		Boolean		&outUsesMark,		Char16		&outMark,		Str255		outName		){	outUsesMark = false;	switch ( inCommand )	{	case CMD_OneWeek:	case CMD_TwoWeeks:	case CMD_ThreeWeeks:	case CMD_FourWeeks:	case CMD_FiveWeeks:	case CMD_SixWeeks:		outEnabled = true;		outUsesMark = true;		if ( vNumWeeks == inCommand - CMD_OneWeek + 1 )			outMark = CHAR_CheckMark;		else			outMark = 0;		break;		default:		INHERITED::FindCommandStatus( inCommand, outEnabled,									outUsesMark, outMark, outName );		break;	}}/*---------------------------------------------------------------------+\ *  NAME:	 pplantViewDestructor - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	25-Jun-1995\+---------------------------------------------------------------------*/void	RemindViewWeekly::pplantViewDestructor		(		void		){	--vnRefCount;	if ( vpMenu )	{		if ( vnRefCount <= 0 )		{			LMenuBar::GetCurrentMenuBar()->RemoveMenu( vpMenu );			delete vpMenu;			vpMenu = NULL;		}	}}#endif // FRAMEWORK/*---------------------------------------------------------------------+\ *  NAME:	 someFunction - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/