/*---------------------------------------------------------------------+\|																		||				copyright 1986 .. 1994 Grizzly Software					||					a division of Bear Consulting Group					||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		||	The information in this document is subject to change without		||	notice and should not be construed as a commitment by				||	Grizzly Software.													||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	julian.h  --  definitions for handling julian dates||	Purpose:|	Author and Date:	J.Griswold			02-Nov-1993|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	02-Nov-1993			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*/#ifndef _H_julian#define _H_julian/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "inclnest.h"#include "inclunst.h"/*---------------------------------------------------------------------+\|																		||	Defines																||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Type definitions													||																		|\+---------------------------------------------------------------------*/typedef long int	Julian;typedef Julian		JulianDate;/*---------------------------------------------------------------------+\|																		||	External variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	Function Prototypes													|||																		|\+=====================================================================*//*---------------------------------------------------------------------+\ *  NAME:	 julianDate_numberFromGregorian -  *  DESCRIPTION:		This function returns the calculated julian date number based		on the input Gregorian style date.				If the day within the month is specified as a negative value		then it is considered as counting from the end of the month.		(-1) is the last day of the month.				Later we will make it so that a negative year indicates BC,		however for now we do not properly handle BC. *  AUTHOR: J.Griswold		DATE:	09-Aug-1983\+---------------------------------------------------------------------*/Julian	julianDate_numberFromGregorian		(				/* RTN:	Julian day number */		int		day,	/* IN:	day within month (negative indicates from end) */		int		mon,	/* IN:	month within year */		int		year	/* IN:	year (including century) */		);/*---------------------------------------------------------------------+\ *  NAME:	 julianDate_weekdayFromNumber *  DESCRIPTION:		This function returns the day of the week from a julian day number.		(1=sun, 2=mon, ..., 7=sat)		 *  AUTHOR: J.Griswold		DATE:	09-Aug-1983\+---------------------------------------------------------------------*/int 	julianDate_weekdayFromNumber		(				/* RTN:	day of the week (1=sunday) */		Julian	jdate	/* IN:	julian day number */		);/*---------------------------------------------------------------------+\ *  NAME:	 julianDate_weeknumFromNumber *  DESCRIPTION:		This function returns the week-number (1..52) within the year		 *  AUTHOR: J.Griswold		DATE:	24-Jun-1995\+---------------------------------------------------------------------*/int		julianDate_weeknumFromNumber		(				/* RTN:	week number within the year */		Julian	jdate	/* IN:	julian day number */		);/*---------------------------------------------------------------------+\ *  NAME:	 julianDate_numberFromWeeklyGregorian -  *  DESCRIPTION:		This function returns the calculated julian date number based		on the input of a date specified by week-number within a month		(negative value counting from the last of the month), week-day		(1=sun .. 7=sat), month and year.  This allows specification		for such things as the first monday in the month or the fourth		thursday, etc..		 *  AUTHOR: J.Griswold		DATE:	09-Aug-1983\+---------------------------------------------------------------------*/Julian	julianDate_numberFromWeeklyGregorian		(					/* RTN:	Julian day number */		int		weeknum,	/* IN:	week within month (negative from last) */		int		weekday,	/* IN:	day within week */		int		mon,		/* IN:	month of the year */		int		year		/* IN:	year */		);/*---------------------------------------------------------------------+\ *  NAME:	 julianDate_gregorianFromNumber *  DESCRIPTION:		This function calculates the Gregorian calendar date from a		given julian day number.		 *  AUTHOR: J.Griswold		DATE:	09-Aug-1983\+---------------------------------------------------------------------*/void julianDate_gregorianFromNumber		(		int		*day,	/* OUT:	day within month */		int		*month,	/* OUT:	month with year */		int		*year,	/* OUT:	year (including century) */		Julian	jdate	/* IN:	julian day number */		);/*---------------------------------------------------------------------+\ *  NAME:	 strDate_ddmmmyyyyFromJulian *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-Nov-1993\+---------------------------------------------------------------------*/int		strDate_ddmmmyyyyFromJulian		(		char	*string,		Julian	jdate		);/*---------------------------------------------------------------------+\ *  NAME:	 strDater_weekdayFromJulian *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-Nov-1993\+---------------------------------------------------------------------*/void	strDate_weekdayFromJulian		(		char	line[],		Julian	jdate		);#endif /* _H_julian */