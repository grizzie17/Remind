/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	rstyle.h  --  brief description of what rstyle.h is for||	Purpose:|	Author and Date:	J.Griswold			dd-mmm-1995|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	12-Mar-1997			J.Griswold		Add "rstyle_getRawSaveString" global function.	23-Feb-1997			J.Griswold		Adjust "compare" function for new signature.	08-Oct-1996			J.Griswold		Move ColorIndex to xpcolor.h	dd-mmm-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*/#ifndef _H_rstyle#define _H_rstyle/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "zcatitem.h"#include "zstyle.h"#include "xpfont.h"/*---------------------------------------------------------------------+\|																		||	Defines																||																		|\+---------------------------------------------------------------------*/#define	STYLE_OverrideFont	0x01#define	STYLE_OverrideSize	0x02#define STYLE_OverrideFace	0x04#define STYLE_OverrideColor	0x08/*---------------------------------------------------------------------+\|																		||	Type Definitions													||																		|\+---------------------------------------------------------------------*/typedef struct RStyleInfo{	FontData	font;	Byte		nColor;} RStyleInfo, *RStyleInfoPtr, &RStyleInfoRef;typedef class RStyle	*RStylePtr, &RStyleRef;/*---------------------------------------------------------------------+\|																		||	Class Definitions													||																		|\+---------------------------------------------------------------------*/class RStyle : public ZStyle{public://	construction/initialization/destruction	enum { StyleClassID = 'text' };						RStyle();					RStyle( const RStyleRef a );	// copy constructor					RStyle( const RStyleInfoPtr pInfo );					RStyle( const RStyleInfoRef rInfo );	virtual			~RStyle();public://	public functions	void			setData( const RStyleInfoRef rInfo );	void			setData( const RStyleInfoPtr pInfo );	void			getData( RStyleInfoPtr pInfo );	Byte			getOverrideMask() const;	void			setColorIndex( const ColorIndex index );	RStylePtr		spawn( const RStyleInfoPtr pInfo, int mOverride, CharPtr sName );		void			activateStyle( XPFontPtr pFontServer );	int				getHeight() const;	int				getAscent() const;	RStyleRef		operator=( const RStyleRef a );	RStyleRef		operator=( const RStyleInfoRef a );					operator FontDataPtr();	friend int		operator==( const RStyleRef a, const RStyleRef b );	friend int		operator!=( const RStyleRef a, const RStyleRef b );	friend int		operator==( const RStyleRef a, const RStyleInfoRef b );	friend int		operator!=( const RStyleRef a, const RStyleInfoRef b );protected://	protected functions//	protected data	FontData	vFont;	Byte		vnColorIdx;		Byte		vmParamOverride;	// mask identifying those parameters that are									// overridden from the parent's.	// cached information	FontSize	vnAscent;	FontSize	vnHeight;		//	normal (non-wrapped) line heightprivate://	private functions	void			calcHeightStuff();//	private data//============================== Overrides ==============================	//	VCatalogItempublic:	virtual Bool	compare( const VCatalogItemRef zc ) const;};/*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	Function Prototypes													|||																		|\+=====================================================================*/int		rstyle_getRawSaveString		(		CharPtr		sOutString,		int			nMaxString,		RStylePtr	pStyle,		int			mOverride		);/*=====================================================================+\||																		|||	Inline Functions													|||																		|\+=====================================================================*//*---------------------------------------------------------------------+\ *  NAME:	 setColorIndex - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-Aug-1995\+---------------------------------------------------------------------*/inline void		RStyle::setColorIndex		(		const ColorIndex	index		){	vnColorIdx = index;}/*---------------------------------------------------------------------+\ *  NAME:	 operator= - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	25-Apr-1995\+---------------------------------------------------------------------*/inline RStyleRef		RStyle::operator=		(		const RStyleRef a		){	vFont = a.vFont;	vnColorIdx = a.vnColorIdx;	vnAscent = a.vnAscent;	vnHeight = a.vnHeight;	return *this;}/*---------------------------------------------------------------------+\ *  NAME:	 operator= - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	25-Apr-1995\+---------------------------------------------------------------------*/inline RStyleRef		RStyle::operator=		(		const RStyleInfoRef a		){	setData( a );	return *this;}/*---------------------------------------------------------------------+\ *  NAME:	 operator FontDataPtr - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	25-Apr-1995\+---------------------------------------------------------------------*/inline	RStyle::operator FontDataPtr		(		void		){	return &vFont;}#endif /* _H_rstyle */