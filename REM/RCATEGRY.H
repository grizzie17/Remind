/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	rcategry.h  --  class for remind's categories||	Purpose:|	Author and Date:	J.Griswold			23-Oct-1995|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	23-Oct-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*/#ifndef _H_rcategry#define _H_rcategry/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "inclnest.h"#include "zcatitem.h"#include "zstyle.h"#include "zcategry.h"#include "rstyle.h"#include "inclunst.h"/*---------------------------------------------------------------------+\|																		||	Defines																||																		|\+---------------------------------------------------------------------*/#define	CATEGORY_OverrideRangeBefore	0x10#define CATEGORY_OverrideRangeAfter		0x20#define CATEGORY_OverridePriority		0x40#define CATEGORY_OverrideStyle			0x80#define	CATEGORY_OverridePending	(CATEGORY_OverrideRangeBefore | CATEGORY_OverrideRangeAfter)/*---------------------------------------------------------------------+\|																		||	Type Definitions													||																		|\+---------------------------------------------------------------------*/typedef struct RPendingRange{	short	nBefore;	//	number of days to display before date	short	nAfter;		//	number of days to display after date} RPendingRange;typedef struct RCategoryInfo{	RPendingRange	range;	ZStyleID		nStyleID;	Byte			nPriority;} RCategoryInfo, *RCategoryInfoPtr, &RCategoryInfoRef;typedef class RCategory		*RCategoryPtr, &RCategoryRef;/*---------------------------------------------------------------------+\|																		||	Class Definitions													||																		|\+---------------------------------------------------------------------*/class RCategory : public ZCategory{public://	construction/initialization/destruction					RCategory();					RCategory( const RCategoryRef a );					RCategory( const RCategoryInfoPtr pInfo );	virtual			~RCategory();public://	public functions	void			setData( const RCategoryInfoPtr pInfo );	void			getData( RCategoryInfoPtr pInfo );	Byte			getOverrideMask() const;	RCategoryPtr	spawn( const RCategoryInfoPtr pInfo, int mOverride, CharPtr sName );	void			setStyleID( ZStyleID nIdent );	ZStyleID		getStyleID() const;	RStylePtr		getStylePtr() const;		void			setPendingRange( short nBefore, short nAfter );	void			getPendingRange( ShortPtr pBefore, ShortPtr pAfter );	void			setPriority( int nPriority );protected://	protected functions//	protected data	RPendingRange	vRange;	ZStyleID		vnStyleID;	Byte			vnPriority;		Byte			vmParamOverride;private://	private functions//	private data//============================== Overrides ==============================	//	XPRefCountprotected:	virtual void	noMoreRefs();		//	ZCatalogItempublic:	virtual Bool	compare( const VCatalogItemRef r ) const;};/*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	Function Prototypes													|||																		|\+=====================================================================*/int		rcategory_getRawSaveString		(							// RTN:	number of characters generated		CharPtr			sOutString,	// OUT:	generated string		int				nMaxString,	// IN:	maximum string length available		RCategoryPtr	pCategory,	// IN:	category		int				mOverride	// IN:	override mask		);/*=====================================================================+\||																		|||	Inline Functions													|||																		|\+=====================================================================*/#endif /* _H_rcategry */