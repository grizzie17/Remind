/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	holiday.cpp  --  brief description of what holiday.cpp is for||	Purpose:|	Author and Date:	J.Griswold			28-May-1995|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	28-May-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*///#include "stdafx.h"		// must be first include for MFC#include "beardefs.h"#include "holiday.h"/*---------------------------------------------------------------------+\|																		||	Local defines / constants											||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Local Type Definitions												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Private Global Variables											||																		|\+---------------------------------------------------------------------*/int			Holiday::vnumHolidays;DateRootPtr	Holiday::vHolidayList[MAX_HOLIDAYS];/*---------------------------------------------------------------------+\|																		||	Public Global Variables												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	 Code																|||																		|\+=====================================================================*/#if 0____class____(){}#endif/*---------------------------------------------------------------------+\ *  NAME:	 Holiday - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	28-May-1995\+---------------------------------------------------------------------*/Holiday::Holiday		(		void		){}/*---------------------------------------------------------------------+\ *  NAME:	 ~Holiday - destructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	28-May-1995\+---------------------------------------------------------------------*/Holiday::~Holiday		(		void		){	for ( int i = 0;  i < vnumHolidays;  ++i )	{		if ( vHolidayList[i] )		{			vHolidayList[i]->release();			vHolidayList[i] = NULL;		}	}}/*=====================================================================+\||	 public member functions											|\+=====================================================================*/#if 0____public____(){}#endif/*---------------------------------------------------------------------+\ *  NAME:	 addDate - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	28-May-1995\+---------------------------------------------------------------------*/void	Holiday::addDate		(		DateRootPtr	pDate		){	if ( pDate )	{		if ( vnumHolidays < MAX_HOLIDAYS )		{			vHolidayList[vnumHolidays++] = pDate;			pDate->addRef();		}	}}/*---------------------------------------------------------------------+\ *  NAME:	 isHoliday - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	28-May-1995\+---------------------------------------------------------------------*/Bool	Holiday::isHoliday		(		Long	nJulian		){	int		nCount;	Long	list[DATELIST_MAX];		for ( int i = 0;  i < vnumHolidays;  ++i )	{		if ( vHolidayList[i] )		{			nCount = vHolidayList[i]->calcDateList( list, nJulian, nJulian );			if ( nCount )			{				for ( int j = 0;  j < nCount;  ++j )				{					if ( nJulian == list[j] )						return YES;				}			}		}	}		return NO;}/*---------------------------------------------------------------------+\ *  NAME:	destroyList - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	09-Oct-1995\+---------------------------------------------------------------------*/void	Holiday::destroyList		(		void		){	for ( int i = 0;  i < vnumHolidays;  ++i )	{		if ( vHolidayList[i] )		{			vHolidayList[i]->release();			vHolidayList[i] = NULL;		}	}	vnumHolidays = 0;}/*=====================================================================+\||	 protected member functions											|\+=====================================================================*/#if 0____protected____(){}#endif/*=====================================================================+\||	 private member functions											|\+=====================================================================*/#if 0____private____(){}#endif/*=====================================================================+\||																		|||	 Overrides															|||																		|\+=====================================================================*/#if 0________Overrides________(){}#endif/*---------------------------------------------------------------------+\ *  NAME:	 someFunction - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/