/*---------------------------------------------------------------------+\|																		||				copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	remvpend.cpp  --  view class for pending messages||	Purpose:|	Author and Date:	J.Griswold			11-Mar-1995|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	03-Apr-1997			J.Griswold		Adjust the formatting of label strings when the date is more		than a week from the pending date.	25-Mar-1997			J.Griswold		Change cmdSetDate so that it only updates the members if the		new values would require them to change.	26-May-1996			J.Griswold		add calculation image	11-Mar-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "stdafx.h"		// must be first include for MFC#include <string.h>#include "beardefs.h"#include "strform.h"#include "ztextsrv.h"#include "remappl.h"#include "remvpend.h"#include "remdoc.h"#include "datevalu.h"/*---------------------------------------------------------------------+\|																		||	Local defines / constants											||																		|\+---------------------------------------------------------------------*/#define INHERITED	RemindViewBase/*---------------------------------------------------------------------+\|																		||	Local type definitions												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Private Global variables											||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Public Global variables												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	 Code																|||																		|\+=====================================================================*/#if 0____class____(){}#endifIMPL_StreamCreate( RemindViewPending, INHERITED )#if 0_{}#endif/*---------------------------------------------------------------------+\ *  NAME:	initRemindViewPending - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	13-Feb-1995\+---------------------------------------------------------------------*/void	RemindViewPending::initRemindViewPending		(		void		){	vJulianDay = 0;	vpNodeJDay = NULL;	vpLabelStyle = NULL;	vpHiliteLabelStyle = NULL;}/*---------------------------------------------------------------------+\ *  NAME:	RemindViewPending - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	13-Feb-1995\+---------------------------------------------------------------------*/RemindViewPending::RemindViewPending		(		void		){	initRemindViewPending();}/*---------------------------------------------------------------------+\ *  NAME:	~RemindViewPending - destructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	13-Feb-1995\+---------------------------------------------------------------------*/RemindViewPending::~RemindViewPending		(		void		){	if ( vpNodeJDay )		vpNodeJDay->destroyAllLinks();	vpNodeJDay = NULL;	if ( vpLabelStyle )		vpLabelStyle->release();	if ( vpHiliteLabelStyle )		vpHiliteLabelStyle->release();}/*=====================================================================+\||	 public member functions											|\+=====================================================================*/#if 0____public____(){}#endif/*=====================================================================+\||	 protected member functions											|\+=====================================================================*/#if 0____protected____(){}#endif/*---------------------------------------------------------------------+\ *  NAME:	gatherDisplayExtents - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-May-1995\+---------------------------------------------------------------------*/void	RemindViewPending::gatherDisplayExtents		(		UPointPtr	pExtents		){	NodeJDayPtr		pItem;	UPoint			range;	Pixel			nLabelHeight;	TextRangeInfo	tRange;		nLabelHeight = vpLabelStyle->getHeight();	pExtents->x = 0;	pExtents->y = 0;	range.x = range.y = 0;	pItem = vpNodeJDay;	while ( pItem )	{		pItem->calcDisplaySize();		pItem->getDisplaySize( &tRange );		//pItem->getDisplayExtents( &range );		if ( pExtents->x < tRange.rect.right )			pExtents->x = tRange.rect.right;		if ( tRange.rect.bottom < nLabelHeight )			pExtents->y += nLabelHeight;		else			pExtents->y += tRange.rect.bottom;		pItem = (NodeJDayPtr)pItem->getNext();	}	pExtents->x += vnMessage + VIEW_MARGIN_LEFT;	pExtents->y += VIEW_MARGIN_TOP * 2;}/*---------------------------------------------------------------------+\ *  NAME:	format_prefix - brief statement *  DESCRIPTION:		format_prefix prepares the prefix portion of the display line.		It returns whether the date should be hilighted or not. *  AUTHOR: J.Griswold			DATE:	01-Jun-1995\+---------------------------------------------------------------------*/static Bool		format_prefix		(		char	line[],		long	jdate,		long	today		){    Bool	hilite;    long	diff;	hilite = NO;    diff = jdate - today;    switch ( diff )    {    case -1:		strcpy( line, " Yesterday" );		break;    case 0:		strcpy( line, "* TODAY * " );		hilite = YES;		break;    case 1:		strcpy( line, " TOMORROW " );		break;		    default:		line[0] = ' ';		if ( diff < -1 )		{			strDate_weekdayFromJulian( &line[1], jdate );		    strcpy(&line[4]," past ");		    if ( diff <= -7 )		    {				strFormat_decimal( &line[10], (long)ABS(diff)/7 );		    }		}		else if ( 6 < diff )		{			strDate_weekdayFromJulian( &line[1], jdate );		    if ( 13 < diff )		    {			    strcpy( &line[4], " wk " );				strFormat_decimal( &line[8], (long)diff/7 );			}			else			{			    strcpy( &line[4], " week " );			}		}		else		{			strDate_weekdayFromJulian( &line[1], jdate );		}		break;    }    return hilite;}/*=====================================================================+\||	 private member functions											|\+=====================================================================*/#if 0____private____(){}#endif/*=====================================================================+\||																		|||	 Overrides															|||																		|\+=====================================================================*/#if 0________Overrides________(){}#endif#if 0____XPViewGlue____(){}#endif/*---------------------------------------------------------------------+\ *  NAME:	documentInitialAttachment - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	24-Apr-1995\+---------------------------------------------------------------------*/void	RemindViewPending::documentInitialAttachment		(		void		){	INHERITED::documentInitialAttachment();	vpLabelStyle = ((RemindApplication*)XPApplication::getApplicationPtr())->getStyleDefaultLabel();	if ( vpLabelStyle )	{		RStyleInfo	info;		XPFontPtr	pFontServer;				vpLabelStyle->addRef();				vpLabelStyle->getData( &info );		info.font.face |= FONTFACE_Bold;		vpHiliteLabelStyle = new RStyle( info );		if ( vpHiliteLabelStyle )			vpHiliteLabelStyle->addRef();		pFontServer = XPFont::getFontServer();		vpLabelStyle->activateStyle( pFontServer );	    pFontServer->faceStyle( FONTFACE_Bold );		vnDayName = VIEW_MARGIN_LEFT;		vnDate = vnDayName + pFontServer->getStringWidth( "Wednesday  " );		vnMessage = vnDate + pFontServer->getStringWidth( "99-Mmm-9999  " );	}	vJulianDay = dateValue_today();	gatherDates();}#if 0____RemindViewBase____(){}#endif/*---------------------------------------------------------------------+\ *  NAME:	cmdSetDate - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/void	RemindViewPending::cmdSetDate		(		Long	nJulian		){	if ( nJulian != vJulianDay )	{		vJulianDay = nJulian;		gatherDates();		imageSetOrigin( 0, 0 );		viewRefresh();	}}/*---------------------------------------------------------------------+\ *  NAME:	calcCalendarHilite - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/void	RemindViewPending::calcCalendarHilite		(		void		){	requestCalendarHilite( vJulianDay, vJulianDay );}/*---------------------------------------------------------------------+\ *  NAME:	calcImage - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	26-May-1996\+---------------------------------------------------------------------*/void	RemindViewPending::calcImage		(		void		){	NodeJDayPtr		pItem;	UPoint			range;	UPoint			pt;	Pixel			nLabelHeight;	TextRangeInfo	tRange;	USize			sz;	Pixel			nMsgWidth;		viewGetSize( &sz );	nMsgWidth = sz.width - vnMessage;		nLabelHeight = vpLabelStyle->getHeight();	pt.x = 0;	pt.y = 0;	range.x = range.y = 0;	pItem = vpNodeJDay;	while ( pItem )	{		pItem->calcDisplaySize( nMsgWidth );		pItem->getDisplaySize( &tRange );		//pItem->getDisplayExtents( &range );		if ( pt.x < tRange.rect.right )			pt.x = tRange.rect.right;		if ( tRange.rect.bottom < nLabelHeight )			pt.y += nLabelHeight;		else			pt.y += tRange.rect.bottom;		pItem = (NodeJDayPtr)pItem->getNext();	}	pt.x += vnMessage + VIEW_MARGIN_LEFT;	pt.y += VIEW_MARGIN_TOP * 2;		imageSetSize( pt.x, pt.y );}/*---------------------------------------------------------------------+\ *  NAME:	buildViewHeader - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	15-May-1995\+---------------------------------------------------------------------*/void	RemindViewPending::buildViewHeader		(		void		){	Char	sTitle[80];	CharPtr	p;		p = sTitle;	::strcpy( p, "Reminders -- " );	p += ::strlen( p );	strDate_weekdayFromJulian( p, vJulianDay );	p += ::strlen( p );	::strcpy( p, ", " );	p += 2;    strDate_ddmmmyyyyFromJulian( p, vJulianDay );	p += ::strlen( p );	setCaption( sTitle );}/*---------------------------------------------------------------------+\ *  NAME:	getViewCmd - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	01-Jan-1996\+---------------------------------------------------------------------*/long	RemindViewPending::getViewCmd		(		void		){	return CMD_NewPending;}/*---------------------------------------------------------------------+\ *  NAME:	dateNext - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	20-Jun-1995\+---------------------------------------------------------------------*/void	RemindViewPending::dateNext		(		void		){	++vJulianDay;}/*---------------------------------------------------------------------+\ *  NAME:	datePrevious - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	20-Jun-1995\+---------------------------------------------------------------------*/void	RemindViewPending::datePrevious		(		void		){	--vJulianDay;}/*---------------------------------------------------------------------+\ *  NAME:	dateBlockNext - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	14-Jan-1996\+---------------------------------------------------------------------*/void	RemindViewPending::dateBlockNext		(		void		){	vJulianDay += 7;}/*---------------------------------------------------------------------+\ *  NAME:	dateBlockPrevious - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	14-Jan-1996\+---------------------------------------------------------------------*/void	RemindViewPending::dateBlockPrevious		(		void		){	vJulianDay -= 7;}/*---------------------------------------------------------------------+\ *  NAME:	gatherDates - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-May-1995\+---------------------------------------------------------------------*/Bool	RemindViewPending::gatherDates		(		void		){	Bool				result = NO;	RemindDocument*		pDoc;		buildViewHeader();	pDoc = (RemindDocumentPtr)documentFetch();	if ( pDoc )	{		if ( vpNodeJDay )			vpNodeJDay->destroyAllLinks();				vpNodeJDay = pDoc->getPending( vJulianDay );		if ( vpNodeJDay )		{			//UPoint	pt;						result = YES;			calcImage();			//gatherDisplayExtents( &pt );			//imageSetSize( pt.x, pt.y );		}		else		{			imageSetOrigin( 0, 0 );			imageSetSize( 5, 5 );		}		calcCalendarHilite();	}	return result;}/*---------------------------------------------------------------------+\ *  NAME:	displayJDays - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-May-1995\+---------------------------------------------------------------------*/void	RemindViewPending::displayJDays		(		XPDrawPtr	pDraw,		URectPtr	pUpdateRect		){	int			nHeight;	int			nMaxHeight;	int			nLabelHeight;	int			nLabelAscent;	NodeJDayPtr	pItem;	char		sDate[16];	Long		y;	Long		nJulian;	XPColor		black( 0, 0, 0 );	ZTextServerPtr	pTextServer;	RStylePtr	pStyle;	Bool		bHilite;	URect		rBox;	Bool		bBox;	char		sPrefix[32];		rBox.left = pUpdateRect->left;	rBox.right = pUpdateRect->right + 1;	bBox = NO;		pTextServer = ZTextServer::getTextServer();		pItem = vpNodeJDay;	if ( pItem )	{		TextRangeInfo	tRange;				nLabelHeight = vpLabelStyle->getHeight();		nLabelAscent = vpLabelStyle->getAscent();		y = VIEW_MARGIN_TOP;		for ( ; pItem; pItem = (NodeJDayPtr)pItem->getNext() )		{			if ( pUpdateRect->bottom < y )				break;				    	pItem->getDisplaySize( &tRange );	    	nHeight = tRange.rect.bottom - tRange.rect.top;	    	nMaxHeight = (nHeight < nLabelHeight) ? nLabelHeight : nHeight;			if ( pUpdateRect->top < (y + nMaxHeight) )			{				if ( bBox )				{					rBox.top = y;					rBox.bottom = y + nMaxHeight;					pDraw->setForeColor( XPColor( COLOR_Gray_5 ) );					pDraw->drawFillRect( &rBox );				}				nJulian = pItem->getJulianDay();				bHilite = format_prefix( sPrefix, nJulian, vJulianDay );		    	strDate_ddmmmyyyyFromJulian( sDate, nJulian );		    	//vpLabelStyle->activateStyle( pFontServer );		    	if ( bHilite )		    		pStyle = vpHiliteLabelStyle;		    	else		    		pStyle = vpLabelStyle;		    	//	pFontServer->faceStyle( FONTFACE_Bold );		    	pTextServer->displayString( pDraw,		    							vnDayName, y,		    							pStyle,		    							sPrefix, 0, TEXTJUST_TopLeft );		    	pTextServer->displayString( pDraw,		    							vnDate, y,		    							pStyle,		    							sDate, 0, TEXTJUST_TopLeft );				//nHeight = pItem->getDisplayHeight();			}			if ( nHeight < nLabelHeight )			{				pItem->drawAt( pDraw, vnMessage, y + nLabelAscent - tRange.nAscender );				y += nLabelHeight;			}			else			{				pItem->drawAt( pDraw, vnMessage, y );				y += nHeight;			}			bBox = !bBox;		}	}	else	// no messages for today	{		USize		sz;		Pixel		nMsgWidth;		XPFontPtr	pFontServer;		static char	sNoMessage[] = "No Pending Messages";		pFontServer = XPFont::getFontServer();				viewGetSize( &sz );		pFontServer->selectID( 0 );		// system font		pFontServer->pointSize( 12.0 );		pFontServer->faceStyle( FONTFACE_Normal );		pFontServer->setColor( black );		nMsgWidth = pFontServer->getStringWidth( sNoMessage );		sz.width = (sz.width - nMsgWidth) / 2;		sz.height = sz.height / 3 + 6;		//sz.height = (sz.height - 12) / 2 + 6;		pFontServer->drawString( pDraw, sz.width, sz.height, sNoMessage );	}}/*---------------------------------------------------------------------+\ *  NAME:	somePackage_someFunction - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/