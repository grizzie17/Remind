/*---------------------------------------------------------------------+\|																		||				copyright Griswold Software 1986 ... 1993				||																		||	This software-file/document, in whole or in part, including the		||	structures and the procedures described herein, may not be			||	provided or otherwise made available without prior written			||	authorization.  In case of authorized or unauthorized publication	||	or duplication, copyright is claimed.								||																		||	Griswold Software assumes NO responsibility for the use or			||	reliability of software altered by the user.						||																		||	The information in this document is subject to change without		||	notice and should not be construed as a commitment by				||	Griswold Software.													||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	dkeyword.h  --  declare the date keyword globals||	Purpose:|	Author and Date:	J.Griswold			27-Oct-1993|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	27-Oct-1993			J.Griswold		description|\+---------------------------------------------------------------------*/#ifndef _H_dkeyword#define _H_dkeyword/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include "inclnest.h"#include "inclunst.h"/*---------------------------------------------------------------------+\|																		||	Defines																||																		|\+---------------------------------------------------------------------*/#define BIT_SUNDAY		0x01#define BIT_MONDAY		0x02#define BIT_TUESDAY 	0x04#define BIT_WEDNESDAY 	0x08#define BIT_THURSDAY 	0x10#define BIT_FRIDAY		0x20#define BIT_SATURDAY 	0x40#define BIT_HOLIDAY		0x100#define BIT_WEEKDAY		( BIT_MONDAY | \						BIT_TUESDAY | \						BIT_WEDNESDAY | \						BIT_THURSDAY | \						BIT_FRIDAY )#define BIT_WEEKEND		( BIT_SUNDAY | BIT_SATURDAY )/*---------------------------------------------------------------------+\|																		||	Type definitions													||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External variables													||																		|\+---------------------------------------------------------------------*/extern char *gDayKwds[];extern char *gSpecialDayKwds[];extern char *gMonthKwds[];extern char *gJewishMonthKwds[];extern char *gMoonKwds[];extern char *gPaschalKwds[];extern char *gOddKwds[];extern char *gCycleKwds[];/*=====================================================================+\||																		|||	 Prototypes															|||																		|\+=====================================================================*//*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findWeekday -  *  DESCRIPTION:		This routine converts an ascii day (monday, tuesday, ...)		to a numeric representation.			returns:			0 = unrecognized or ambiguous			1-7 = numeric weekday (1=sunday). *  AUTHOR: J.Griswold		DATE:	27-Oct-1993\+---------------------------------------------------------------------*/int dkeyword_findWeekday		(		char	*string		);/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_strWeekday - get the weekday name		This routine returns a pointer to the weekday name.  *  AUTHOR: J.Griswold		DATE:	13-Nov-1993\+---------------------------------------------------------------------*/char	*dkeyword_strWeekday		(		int		nDay	/* IN:	weekday number */		);/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findPaschal - get special day names *  AUTHOR: J.Griswold		DATE:	27-Oct-1993\+---------------------------------------------------------------------*/int dkeyword_findPaschal( char *string );/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findSpecialDay - get special day names *  AUTHOR: J.Griswold		DATE:	27-Oct-1993\+---------------------------------------------------------------------*/int dkeyword_findSpecialDay( char *string );/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findMonth - get month number from name		This routine returns the numeric month.		returns:			0		= undefined or ambiguous			1-12	= numeric month  *  AUTHOR: J.Griswold		DATE:	27-Oct-1993\+---------------------------------------------------------------------*/int dkeyword_findMonth( char *string );/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_strMonth - get the month name		This routine returns a pointer to the month name.  *  AUTHOR: J.Griswold		DATE:	13-Nov-1993\+---------------------------------------------------------------------*/char	*dkeyword_strMonth		(		int		nMonth		);/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findJewishMonth - get month name		This routine returns the numeric month.		returns:			0		= undefined or ambiguous			1-12	= numeric month  *  AUTHOR: J.Griswold		DATE:	05-Nov-1993\+---------------------------------------------------------------------*/int dkeyword_findJewishMonth( char *string );/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_strJewishMonth - get the month name		This routine returns a pointer to the month name.  *  AUTHOR: J.Griswold		DATE:	13-Nov-1993\+---------------------------------------------------------------------*/char	*dkeyword_strJewishMonth		(		int		nMonth		);/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findEvenOdd - get even or odd		This routine returns identifier for odd or even keyword.		returns:			0		= undefined or ambiguous			1		= odd			2		= even  *  AUTHOR: J.Griswold		DATE:	27-Oct-1993\+---------------------------------------------------------------------*/int dkeyword_findEvenOdd( char *string );/*---------------------------------------------------------------------+\ *  NAME:	 dkeyword_findMonthCycle - get month cycle		This routine returns identifier for month cycle keyword.		returns:			0		= undefined or ambiguous			2		= bimonthly			3		= quarterly			6		= semiannual  *  AUTHOR: J.Griswold		DATE:	09-Jun-1995\+---------------------------------------------------------------------*/int dkeyword_findMonthCycle( char *string );#endif /* _H_dkeyword */