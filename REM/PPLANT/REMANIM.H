/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1995 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	remanim.h  --  brief description of what remanim.h is for||	Purpose:|	Author and Date:	J.Griswold			20-Nov-1995|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|	$Header:	$|	--=>keyflag<=-- "Version %v %f, Locked by %l"|	""\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	20-Nov-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*/#ifndef _H_remanim#define _H_remanim/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include <UGWorld.h>#include "beartype.h"/*---------------------------------------------------------------------+\|																		||	Defines																||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Type Definitions													||																		|\+---------------------------------------------------------------------*/typedef class XPSprite			*XPSpritePtr, &XPSpriteRef;typedef class XPSpriteGWorld	*XPSpriteGWorldPtr, &XPSpriteGWorldRef;typedef class XPSpritePix		*XPSpritePixPtr, &XPSpritePixRef;typedef class XPAnimation		*XPAnimationPtr, &XPAnimationRef;/*---------------------------------------------------------------------+\|																		||	Class Definitions													||																		|\+---------------------------------------------------------------------*/class XPSprite{public://	construction/initialization/destruction					XPSprite();	virtual			~XPSprite();public://	public functions	virtual Bool	reset();	virtual Bool	hasFrame( Long nFrame );	virtual void	draw( Rect* pViewRect, Long nFrame );	virtual void	getFrameRect( Rect* pSpriteRect, Rect* pViewRect, Long nFrame );	virtual void	getRect( Rect* pSpriteRect );	virtual void	getSize( Point* pSize );protected://	protected functions//	protected data	Rect			vRect;private://	private functions//	private data//============================== Overrides ==============================	//	root	//	BaseClass-1	//	BaseClass};class XPSpriteGWorld : public XPSprite{public://	construction/initialization/destruction					XPSpriteGWorld();	virtual			~XPSpriteGWorld();public://	public functions	Bool			makeGWorld( short nWidth, short nHeight );	Bool			beginDrawing();	Bool			endDrawing();protected://	protected functions//	protected data	LGWorld*		vpPixWorld;	short			vnHeight;	short			vnWidth;private://	private functions//	private data//============================== Overrides ==============================	//	XPSpritepublic:	virtual void	getFrameRect( Rect* pSpriteRect, Rect* pViewRect, Long nFrame );};class XPSpritePix : public XPSpriteGWorld{public://	construction/initialization/destruction					XPSpritePix();	virtual			~XPSpritePix();public://	public functions	Bool			specifyPicture( short nPictID );protected://	protected functions//	protected dataprivate://	private functions//	private data//============================== Overrides ==============================};class XPAnimation{public://	construction/initialization/destruction					XPAnimation();	virtual			~XPAnimation();public://	public functions	virtual Bool	initialize();	virtual void	setSize( Rect* pRect );		virtual Bool	moreFrames();	virtual Bool	frameStart();	virtual Bool	frameDrawSome();	virtual Bool	frameComplete();protected://	protected functions//	protected data	Rect			vRect;private://	private functions//	private data//============================== Overrides ==============================	//	root	//	BaseClass-1	//	BaseClass};/*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	Function Prototypes													|||																		|\+=====================================================================*//*=====================================================================+\||																		|||	Inline Functions													|||																		|\+=====================================================================*/#endif /* _H_remanim */