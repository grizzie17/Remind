/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1995 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	remabout.h  --  brief description of what remabout.h is for||	Purpose:|	Author and Date:	J.Griswold			30-Jun-1995|| optional topics (delete if not used)|	Restrictions/Warnings:|	Formats:|	References:|	Notes:|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|	$Header:	$|	--=>keyflag<=-- "Version %v %f, Locked by %l"|	""\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	30-Jun-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*/#ifndef _H_remabout#define _H_remabout/*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*/#include <LPeriodical.h>#include <LOffscreenView.h>#include <UGWorld.h>#include <LDialogBox.h>#include "beartype.h"#include "xpdyn.h"#include "remanim.h"/*---------------------------------------------------------------------+\|																		||	Defines																||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Type Definitions													||																		|\+---------------------------------------------------------------------*/typedef struct TripRecord{	Point	loc;	short	nStep;} TripRecord, *TripRecordPtr;typedef struct SpriteRecord{	Long	nFrame;	XPSpritePixPtr	pSprite;} SpriteRecord;/*---------------------------------------------------------------------+\|																		||	Class Definitions													||																		|\+---------------------------------------------------------------------*/class AboutAnim : public XPAnimation{public://	construction/initialization/destruction					AboutAnim();	virtual			~AboutAnim();public:protected:	Long			vnFrame;	Long			vnLogoFrame;	Long			vnIconFrame;	Long			vnPegasusFrame;	Long			vnCopyFrame;	Long			vnVersFrame;	XPSpritePixPtr	vpLogo;	XPSpritePixPtr	vpIcon;	XPSpritePixPtr	vpPegasus;	XPSpritePixPtr	vpCopy;	XPSpritePixPtr	vpVers;private:	XPSpritePixPtr	buildPix( Point* pDist, short nPictID );	XPSpritePixPtr	buildVers( Point* pDist );	XPSpritePixPtr	buildCopyRight( Point* pDist );	XPSpritePixPtr	buildText( Point* pDist, StringPtr pasString );	//============================== Overrides ==============================	//	XPAnimationpublic:	virtual Bool	initialize();	virtual Bool	moreFrames();	virtual Bool	frameStart();	virtual Bool	frameDrawSome();	virtual Bool	frameComplete();};class RemindAbout : public LDialogBox, public LPeriodical{	DECL_StreamCreate( RemindAbout )public://	construction/initialization/destruction					RemindAbout();	virtual			~RemindAbout();private:	void			initRemindAbout();public://	public functions	static void		createRemindAbout();protected://	protected functions	void			finishAndClose();	void			drawPict();	LWindow			*getLWindow();	Bool			doFrame();//	protected data	long			vnStartTime;	Bool			vbRepeating;	int				vnState;	LGWorld*		vpViewWorld;	XPAnimationPtr	vpAnim;private://	private functions//	private data//============================== Overrides ==============================	//	LPaneprotected:	virtual void	FinishCreateSelf();	virtual void	DrawSelf();	virtual void	ClickSelf( const SMouseDownEvent &inMouseDown );	//	LWindowpublic:	virtual void	HandleClick( const EventRecord& inMacEvent, Int16 inPart );		//	LCommanderpublic:	virtual Boolean	ObeyCommand( CommandT inCommand, void* ioParam );	virtual void	FindCommandStatus( CommandT inCommand,										Boolean &outEnabled, Boolean &outUsesMark,										Char16 &outMark, Str255 outName );	virtual Boolean	HandleKeyPress( const EventRecord &inKeyEvent );	//	LPeriodicalpublic:	virtual	void	SpendTime(const EventRecord &inMacEvent);};/*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	Function Prototypes													|||																		|\+=====================================================================*//*=====================================================================+\||																		|||	Inline Functions													|||																		|\+=====================================================================*/#endif /* _H_remabout */