/*---------------------------------------------------------------------+\|																		||				copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		||	The information in this document is subject to change without		||	notice and should not be construed as a commitment by				||	Grizzly Software.													||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	datevalu.c  --  brief description of what prototyp.c is for||	Purpose:|	Author and Date:	J.Griswold			dd-mmm-yyyy|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	dd-mmm-yyyy			f.lastName		description|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*///#include "stdafx.h"		// must be first include for MFC#include <stdlib.h>#include "machine.h"#include "beartype.h"#ifdef OS_MACINTOSH    #include <OSUtils.h>#include <Script.h>#else#include <time.h>#include "tokencnv.h"#endif#include "julian.h"#include "datevalu.h"/*---------------------------------------------------------------------+\|																		||	Local defines / constants											||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Local type definitions												||																		|\+---------------------------------------------------------------------*/typedef struct DateGlobal{	Julian	today;	Julian	sunday;	int		century;	int		timezone;	int		daylight;} DateGlobal;/*---------------------------------------------------------------------+\|																		||	Private Global variables											||																		|\+---------------------------------------------------------------------*/DateGlobal gDateGlobal = { 0 };/*---------------------------------------------------------------------+\|																		||	Public Global variables												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	 Code																|||																		|\+=====================================================================*//*---------------------------------------------------------------------+\ *  NAME:	 dateValue_init - initialize global date control structure *  DESCRIPTION: *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/void dateValue_init( void ){	int				weekday;	int				date, month, year;	long			timezone;#ifdef OS_MACINTOSH    	DateTimeRec		d;	MachineLocation	loc;#else	time_t			bintime;	struct tm		*pt;	char			*pTZ;#endif#ifdef OS_MACINTOSH	(void)InitUtil();	GetTime( &d );	date = d.day;	month = d.month;	year = d.year;	ReadLocation( &loc );	timezone = loc.u.gmtDelta;	if ( (timezone & 0x00800000L) != 0 )		timezone |= 0xFF000000L;	gDateGlobal.timezone = timezone / (60L * 60L);	if ( timezone < 0 )		gDateGlobal.timezone *= (-1);	if ( loc.u.dlsDelta )		gDateGlobal.daylight = 1;#else	time( &bintime );	pt = localtime(&bintime);		date = pt->tm_mday;	month = pt->tm_mon + 1;	year = pt->tm_year;	if ( year < 1900 )		year += 1900;	pTZ = getenv( "TZ" );	if ( pTZ )	{		tokenCnv_decimal( &timezone, pTZ+3 );		gDateGlobal.timezone = timezone;	}	else	{		gDateGlobal.timezone = 5;	}	if ( pt->tm_isdst )		gDateGlobal.daylight = 1;#endif	gDateGlobal.century = year / 100;	gDateGlobal.century *= 100;	gDateGlobal.today = julianDate_numberFromGregorian( date, month, year );		weekday = julianDate_weekdayFromNumber( gDateGlobal.today );	gDateGlobal.sunday = gDateGlobal.today - weekday + 1;}/*---------------------------------------------------------------------+\ *  NAME:	 dateValue_century - return current century *  DESCRIPTION: *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/int dateValue_century( void ){	if ( gDateGlobal.today == 0 )		dateValue_init();	return gDateGlobal.century;}/*---------------------------------------------------------------------+\ *  NAME:	 dateValue_today - return Julian number of today *  DESCRIPTION: *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/Julian dateValue_today( void ){	if ( gDateGlobal.today == 0 )		dateValue_init();	return gDateGlobal.today;}/*---------------------------------------------------------------------+\ *  NAME:	 dateValue_sunday - return julian number of sunday *  DESCRIPTION: *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/Julian dateValue_sunday( void ){	if ( gDateGlobal.today == 0 )		dateValue_init();	return gDateGlobal.sunday;}/*---------------------------------------------------------------------+\ *  NAME:	 dateValue_timezone - return current timezone delta *  DESCRIPTION: *  AUTHOR: J.Griswold		DATE:	dd-mmm-1993\+---------------------------------------------------------------------*/int dateValue_timezone( void ){	if ( gDateGlobal.today == 0 )		dateValue_init();	return gDateGlobal.timezone + gDateGlobal.daylight;}