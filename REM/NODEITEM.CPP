/*---------------------------------------------------------------------+\|																		||				Copyright 1986 .. 1997 Grizzly Software					||					a division of Bear Consulting Group					||						  All Rights Reserved							||																		||	This software-file/document, in whole or in part, including			||	the structures and the procedures described herein, may not			||	be provided or otherwise made available without prior written		||	authorization.  In case of authorized or unauthorized				||	publication or duplication, copyright is claimed.					||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	nodeitem.cpp  --  brief description of what nodeday.cpp is for||	Purpose:|	Author and Date:	J.Griswold			07-May-1995|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\||	Revision History:|	07-May-1995			J.Griswold		Initial Revision|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Include Files														||																		|\+---------------------------------------------------------------------*///#include "stdafx.h"		// must be first include for MFC#include "xpdraw.h"#include "nodeitem.h"/*---------------------------------------------------------------------+\|																		||	Local defines / constants											||																		|\+---------------------------------------------------------------------*/#define INHERITED	NodeLink/*---------------------------------------------------------------------+\|																		||	Local Type Definitions												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Private Global Variables											||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	Public Global Variables												||																		|\+---------------------------------------------------------------------*//*---------------------------------------------------------------------+\|																		||	External Variables													||																		|\+---------------------------------------------------------------------*//*=====================================================================+\||																		|||	 Code																|||																		|\+=====================================================================*/#if 0#pragma mark ____class____#endif/*---------------------------------------------------------------------+\ *  NAME:	 NodeRItem - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	07-May-1995\+---------------------------------------------------------------------*/NodeRItem::NodeRItem		(		void		)		: INHERITED(){	vpItem = NULL;}/*---------------------------------------------------------------------+\ *  NAME:	 NodeRItem - constructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	07-May-1995\+---------------------------------------------------------------------*/NodeRItem::NodeRItem		(		RItemPtr	pRItem		)		: INHERITED(){	vpItem = pRItem;}/*---------------------------------------------------------------------+\ *  NAME:	 ~NodeRItem - destructor *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	07-May-1995\+---------------------------------------------------------------------*/NodeRItem::~NodeRItem		(		void		){}/*=====================================================================+\||	 public member functions											|\+=====================================================================*/#if 0#pragma mark ____public____#endif/*---------------------------------------------------------------------+\ *  NAME:	 display - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	29-May-1995\+---------------------------------------------------------------------*/void	NodeRItem::display		(		XPDrawPtr	pDraw,		Pixel		x,		Pixel		y,		Long		nJulian		){	if ( vpItem )	{		URect	r;		//int		nHeight;				//nHeight = vpItem->getAscent();		//vpItem->display( pDraw, x, y+nHeight, nJulian );		r.top = y;		r.left = x;		r.bottom = vTextRange.rect.bottom - vTextRange.rect.top + y;		r.right = vTextRange.rect.right - vTextRange.rect.left + x;		vpItem->display( pDraw, &r, nJulian );	}}/*=====================================================================+\||	 protected member functions											|\+=====================================================================*/#if 0#pragma mark ____protected____#endif/*=====================================================================+\||	 private member functions											|\+=====================================================================*/#if 0#pragma mark ____private____#endif/*=====================================================================+\||																		|||	 Overrides															|||																		|\+=====================================================================*/#if 0#pragma mark ________Overrides________#endif#if 0#pragma mark ____NodeLink____#endif/*---------------------------------------------------------------------+\ *  NAME:	calcDisplaySize - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	23-May-1996\+---------------------------------------------------------------------*/void	NodeRItem::calcDisplaySize		(		Pixel	nMaxWidth,		VoidPtr	pVoid		){	long	nJulian;		INHERITED::calcDisplaySize( nMaxWidth, pVoid );		if ( vpItem )	{		if ( pVoid )			nJulian = *(long*)pVoid;		else			nJulian = 0;		vpItem->getExtents( &vTextRange, nMaxWidth, nJulian );	}}/*---------------------------------------------------------------------+\ *  NAME:	 getDisplayHeight - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-May-1995\+---------------------------------------------------------------------*/int		NodeRItem::getDisplayHeight		(		void		){	return INHERITED::getDisplayHeight();}/*---------------------------------------------------------------------+\ *  NAME:	 getDisplayExtents - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	05-Jun-1995\+---------------------------------------------------------------------*/void	NodeRItem::getDisplayExtents		(		UPointPtr	pExtents		){	INHERITED::getDisplayExtents( pExtents );	//if ( vpItem )	//	vpItem->getExtents( pExtents );}#if 0#pragma mark ____BCDisplay____#endif/*---------------------------------------------------------------------+\ *  NAME:	 draw - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-May-1995\+---------------------------------------------------------------------*/void	NodeRItem::draw		(		XPDrawPtr	pDraw		){	if ( vpItem )		vpItem->draw( pDraw );}/*---------------------------------------------------------------------+\ *  NAME:	 drawAt - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	08-May-1995\+---------------------------------------------------------------------*/void	NodeRItem::drawAt		(		XPDrawPtr	pDraw,		Pixel		x,		Pixel		y		){	if ( vpItem )	{		int		nHeight;				nHeight = vpItem->getAscent();		vpItem->drawAt( pDraw, x, y+nHeight );	}}/*---------------------------------------------------------------------+\ *  NAME:	 someFunction - brief statement *  DESCRIPTION: *  AUTHOR: J.Griswold			DATE:	dd-mmm-1995\+---------------------------------------------------------------------*/